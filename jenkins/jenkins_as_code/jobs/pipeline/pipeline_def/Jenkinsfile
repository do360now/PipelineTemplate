#!groovy

// Build Parameters
properties([ parameters([
  string( name: 'AWS_ACCESS_KEY_ID', defaultValue: ''),
  string( name: 'AWS_SECRET_ACCESS_KEY', defaultValue: '')
]), pipelineTriggers([]) ])

// Environment Variables
env.AWS_ACCESS_KEY_ID = AWS_ACCESS_KEY_ID
env.AWS_SECRET_ACCESS_KEY = AWS_SECRET_ACCESS_KEY

node {
  
  stage('GitSCM'){
       git branch: 'deploy', url: 'file:///var/lib/jenkins/repo'
  }

  stage("build & SonarQube analysis") {
        def scannerHome = tool "sonarqube"
            withSonarQubeEnv("sonarqube") {
                sh """
                    ${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey='appworkspace' \
                        -Dsonar.projectName='appworkspace' \
                        -Dsonar.projectVersion='1.0.0' \
                        -Dsonar.sources='src'
                """
      }
  }
      
  stage("Quality Gate"){
        timeout(time: 1, unit: 'HOURS') {
            def qg = waitForQualityGate()
            if (qg.status != 'OK') {
                error "Pipeline aborted due to quality gate failure: ${qg.status}"
            }
        }
  }

  stage ('Clean') {
      sh '''#!/bin/bash
            if [ -f inventory.txt ]
            then
              rm -rf inventory.txt
            fi
         '''
  }
 
  stage ('Terraform Plan') {
    sh 'terraform init'
    sh 'terraform plan -no-color -out=create.tfplan'
  }

  stage ('Terraform Apply') {
    sh 'terraform apply -no-color -auto-approve create.tfplan'
  }

  stage ('WAIT TO DEPLOY AWS') {
    sleep 30
    sh 'terraform show'
  }

  stage ('Ansible') {
      sh '''#!/bin/bash
            chmod 400 jenkins.pem
            touch inventory.txt
            cat hosts.txt | while read line 
            do
              echo "aws ansible_ssh_user=ubuntu ansible_ssh_private_key_file=jenkins.pem ansible_host=$line" > inventory.txt   
            done
            ansible-playbook playbook.yml -i inventory.txt
         '''
  }
 
    stage ('Notification') {
    echo "Sent mail notification" 
  }
  
}